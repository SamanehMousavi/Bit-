{"ast":null,"code":"var _jsxFileName = \"/Users/samanehmousavi/Desktop/concordia-bootcamp/Final Project/client/src/components/ProjectManagerTool/CreateBoard.js\",\n  _s = $RefreshSig$();\nimport { styled, keyframes } from \"styled-components\";\nimport Header from \"../Checklist/Header\";\nimport { useEffect, useState } from \"react\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport { useParams } from \"react-router-dom\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst onDragEnd = (result, columns, setColumns) => {\n  if (!result.destination) return;\n  const {\n    source,\n    destination\n  } = result;\n  if (source.droppableId !== destination.droppableId) {\n    const sourceColumn = columns[source.droppableId];\n    const destColumn = columns[destination.droppableId];\n    const sourceItems = [...sourceColumn.items];\n    const destItems = [...destColumn.items];\n    const [removed] = sourceItems.splice(source.index, 1);\n    destItems.splice(destination.index, 0, removed);\n    setColumns({\n      ...columns,\n      [source.droppableId]: {\n        ...sourceColumn,\n        items: sourceItems\n      },\n      [destination.droppableId]: {\n        ...destColumn,\n        items: destItems\n      }\n    });\n  } else {\n    const column = columns[source.droppableId];\n    const copiedItems = [...column.items];\n    const [removed] = copiedItems.splice(source.index, 1);\n    copiedItems.splice(destination.index, 0, removed);\n    setColumns({\n      ...columns,\n      [source.droppableId]: {\n        ...column,\n        items: copiedItems\n      }\n    });\n  }\n};\nconst CreateBoard = () => {\n  _s();\n  const [columns, setColumns] = useState({\n    requested: {\n      name: \"Requested\",\n      items: []\n    },\n    toDo: {\n      name: \"To do\",\n      items: []\n    },\n    inProgress: {\n      name: \"In Progress\",\n      items: []\n    },\n    done: {\n      name: \"Done\",\n      items: []\n    }\n  });\n  const {\n    user\n  } = useAuth0();\n  useEffect(() => {\n    // Fetch data from MongoDB or your API endpoint\n    axios.get(\"your-api-endpoint\").then(response => {\n      const {\n        tasks,\n        taskStatus\n      } = response.data;\n      setColumns(taskStatus); // Update the columns state with fetched data\n    }).catch(error => {\n      console.error(\"Error fetching data:\", error);\n    });\n  }, []); // Empty dependency array to run the effect only once on component mount\n\n  const handleDragEnd = result => {\n    if (!result.destination) return;\n    const newItems = Array.from(items);\n    const [movedItem] = newItems.splice(result.source.index, 1);\n    newItems.splice(result.destination.index, 0, movedItem);\n    setItems(newItems);\n  };\n  return /*#__PURE__*/_jsxDEV(Main, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(DragDropContext, {\n        onDragEnd: handleDragEnd,\n        children: /*#__PURE__*/_jsxDEV(Droppable, {\n          droppableId: \"droppable\",\n          children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: provided.innerRef,\n            ...provided.droppableProps,\n            children: [items.map((item, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n              draggableId: item.id,\n              index: index,\n              children: provided => /*#__PURE__*/_jsxDEV(Item, {\n                ref: provided.innerRef,\n                ...provided.draggableProps,\n                ...provided.dragHandleProps,\n                children: item.content\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 23\n              }, this)\n            }, item.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 19\n            }, this)), provided.placeholder]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n};\n_s(CreateBoard, \"o8qBwv+fdUkFcM/sSdDf4CkVnJE=\", false, function () {\n  return [useAuth0];\n});\n_c = CreateBoard;\nexport default CreateBoard;\nconst Main = styled.div``;\n_c2 = Main;\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n`;\n_c3 = Container;\nconst Item = styled.div`\n  background-color: #f8f8f8;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  padding: 8px;\n  margin-bottom: 8px;\n`;\n_c4 = Item;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"CreateBoard\");\n$RefreshReg$(_c2, \"Main\");\n$RefreshReg$(_c3, \"Container\");\n$RefreshReg$(_c4, \"Item\");","map":{"version":3,"names":["styled","keyframes","Header","useEffect","useState","useAuth0","useParams","DragDropContext","Droppable","Draggable","jsxDEV","_jsxDEV","onDragEnd","result","columns","setColumns","destination","source","droppableId","sourceColumn","destColumn","sourceItems","items","destItems","removed","splice","index","column","copiedItems","CreateBoard","_s","requested","name","toDo","inProgress","done","user","axios","get","then","response","tasks","taskStatus","data","catch","error","console","handleDragEnd","newItems","Array","from","movedItem","setItems","Main","children","fileName","_jsxFileName","lineNumber","columnNumber","Container","provided","ref","innerRef","droppableProps","map","item","draggableId","id","Item","draggableProps","dragHandleProps","content","placeholder","_c","div","_c2","_c3","_c4","$RefreshReg$"],"sources":["/Users/samanehmousavi/Desktop/concordia-bootcamp/Final Project/client/src/components/ProjectManagerTool/CreateBoard.js"],"sourcesContent":["import { styled, keyframes } from \"styled-components\";\nimport Header from \"../Checklist/Header\";\nimport { useEffect, useState } from \"react\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport { useParams } from \"react-router-dom\";\n\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\n\nconst onDragEnd = (result, columns, setColumns) => {\n  if (!result.destination) return;\n  const { source, destination } = result;\n\n  if (source.droppableId !== destination.droppableId) {\n    const sourceColumn = columns[source.droppableId];\n    const destColumn = columns[destination.droppableId];\n    const sourceItems = [...sourceColumn.items];\n    const destItems = [...destColumn.items];\n    const [removed] = sourceItems.splice(source.index, 1);\n    destItems.splice(destination.index, 0, removed);\n    setColumns({\n      ...columns,\n      [source.droppableId]: {\n        ...sourceColumn,\n        items: sourceItems,\n      },\n      [destination.droppableId]: {\n        ...destColumn,\n        items: destItems,\n      },\n    });\n  } else {\n    const column = columns[source.droppableId];\n    const copiedItems = [...column.items];\n    const [removed] = copiedItems.splice(source.index, 1);\n    copiedItems.splice(destination.index, 0, removed);\n    setColumns({\n      ...columns,\n      [source.droppableId]: {\n        ...column,\n        items: copiedItems,\n      },\n    });\n  }\n};\n\nconst CreateBoard = () => {\n  const [columns, setColumns] = useState({\n    requested: {\n      name: \"Requested\",\n      items: [],\n    },\n    toDo: {\n      name: \"To do\",\n      items: [],\n    },\n    inProgress: {\n      name: \"In Progress\",\n      items: [],\n    },\n    done: {\n      name: \"Done\",\n      items: [],\n    },\n  });\n\n  const { user } = useAuth0();\n  useEffect(() => {\n    // Fetch data from MongoDB or your API endpoint\n    axios\n      .get(\"your-api-endpoint\")\n      .then((response) => {\n        const { tasks, taskStatus } = response.data;\n        setColumns(taskStatus); // Update the columns state with fetched data\n      })\n      .catch((error) => {\n        console.error(\"Error fetching data:\", error);\n      });\n  }, []); // Empty dependency array to run the effect only once on component mount\n\n  const handleDragEnd = (result) => {\n    if (!result.destination) return;\n\n    const newItems = Array.from(items);\n    const [movedItem] = newItems.splice(result.source.index, 1);\n    newItems.splice(result.destination.index, 0, movedItem);\n\n    setItems(newItems);\n  };\n\n  return (\n    <Main>\n      <Header />\n      <Container>\n        <DragDropContext onDragEnd={handleDragEnd}>\n          <Droppable droppableId=\"droppable\">\n            {(provided) => (\n              <div ref={provided.innerRef} {...provided.droppableProps}>\n                {items.map((item, index) => (\n                  <Draggable key={item.id} draggableId={item.id} index={index}>\n                    {(provided) => (\n                      <Item\n                        ref={provided.innerRef}\n                        {...provided.draggableProps}\n                        {...provided.dragHandleProps}\n                      >\n                        {item.content}\n                      </Item>\n                    )}\n                  </Draggable>\n                ))}\n                {provided.placeholder}\n              </div>\n            )}\n          </Droppable>\n        </DragDropContext>\n      </Container>\n    </Main>\n  );\n};\nexport default CreateBoard;\n\nconst Main = styled.div``;\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n`;\n\nconst Item = styled.div`\n  background-color: #f8f8f8;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  padding: 8px;\n  margin-bottom: 8px;\n`;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}