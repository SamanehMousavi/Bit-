{"ast":null,"code":"var _jsxFileName = \"/Users/samanehmousavi/Desktop/concordia-bootcamp/Final Project/client/src/components/ProjectManagerTool/Bdnd.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\n\n// fake data generator\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getItems = function (count) {\n  let offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  return Array.from({\n    length: count\n  }, (v, k) => k).map(k => ({\n    id: `item-${k + offset}-${new Date().getTime()}`,\n    content: `item ${k + offset}`\n  }));\n};\nconst reorder = (list, startIndex, endIndex) => {\n  const result = Array.from(list);\n  const [removed] = result.splice(startIndex, 1);\n  result.splice(endIndex, 0, removed);\n  return result;\n};\n\n/**\n * Moves an item from one list to another list.\n */\nconst move = (source, destination, droppableSource, droppableDestination) => {\n  const sourceClone = Array.from(source);\n  const destClone = Array.from(destination);\n  const [removed] = sourceClone.splice(droppableSource.index, 1);\n  destClone.splice(droppableDestination.index, 0, removed);\n  const result = {};\n  result[droppableSource.droppableId] = sourceClone;\n  result[droppableDestination.droppableId] = destClone;\n  return result;\n};\nconst grid = 8;\nconst getItemStyle = (isDragging, draggableStyle) => ({\n  // some basic styles to make the items look a bit nicer\n  userSelect: \"none\",\n  padding: grid * 2,\n  margin: `0 0 ${grid}px 0`,\n  // change background colour if dragging\n  background: isDragging ? \"lightgreen\" : \"grey\",\n  // styles we need to apply on draggables\n  ...draggableStyle\n});\nconst getListStyle = isDraggingOver => ({\n  background: isDraggingOver ? \"lightblue\" : \"lightgrey\",\n  padding: grid,\n  width: 250\n});\nfunction Bdnd() {\n  _s();\n  const [state, setState] = useState([getItems(10), getItems(5, 10)]);\n  function onDragEnd(result) {\n    const {\n      source,\n      destination\n    } = result;\n\n    // dropped outside the list\n    if (!destination) {\n      return;\n    }\n    const sInd = +source.droppableId;\n    const dInd = +destination.droppableId;\n    if (sInd === dInd) {\n      const items = reorder(state[sInd], source.index, destination.index);\n      const newState = [...state];\n      newState[sInd] = items;\n      setState(newState);\n    } else {\n      const result = move(state[sInd], state[dInd], source, destination);\n      const newState = [...state];\n      newState[sInd] = result[sInd];\n      newState[dInd] = result[dInd];\n      setState(newState.filter(group => group.length));\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: () => {\n        setState([...state, []]);\n      },\n      children: \"Add new group\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: () => {\n        setState([...state, getItems(1)]);\n      },\n      children: \"Add new item\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\"\n      },\n      children: /*#__PURE__*/_jsxDEV(DragDropContext, {\n        onDragEnd: onDragEnd,\n        children: state.map((el, ind) => /*#__PURE__*/_jsxDEV(Droppable, {\n          droppableId: `${ind}`,\n          children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: provided.innerRef,\n            style: getListStyle(snapshot.isDraggingOver),\n            ...provided.droppableProps,\n            children: [el.map((item, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n              draggableId: item.id,\n              index: index,\n              children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(\"div\", {\n                ref: provided.innerRef,\n                ...provided.draggableProps,\n                ...provided.dragHandleProps,\n                style: getItemStyle(snapshot.isDragging, provided.draggableProps.style),\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    display: \"flex\",\n                    justifyContent: \"space-around\"\n                  },\n                  children: [item.content, /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"button\",\n                    onClick: () => {\n                      const newState = [...state];\n                      newState[ind].splice(index, 1);\n                      setState(newState.filter(group => group.length));\n                    },\n                    children: \"delete\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 135,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 128,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 25\n              }, this)\n            }, item.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 21\n            }, this)), provided.placeholder]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 17\n          }, this)\n        }, ind, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n}\n_s(Bdnd, \"q1BLPtfl0KU06u/rzATV+yMKpwQ=\");\n_c = Bdnd;\nexport default Bdnd;\nvar _c;\n$RefreshReg$(_c, \"Bdnd\");","map":{"version":3,"names":["React","useState","ReactDOM","DragDropContext","Droppable","Draggable","jsxDEV","_jsxDEV","getItems","count","offset","arguments","length","undefined","Array","from","v","k","map","id","Date","getTime","content","reorder","list","startIndex","endIndex","result","removed","splice","move","source","destination","droppableSource","droppableDestination","sourceClone","destClone","index","droppableId","grid","getItemStyle","isDragging","draggableStyle","userSelect","padding","margin","background","getListStyle","isDraggingOver","width","Bdnd","_s","state","setState","onDragEnd","sInd","dInd","items","newState","filter","group","children","type","onClick","fileName","_jsxFileName","lineNumber","columnNumber","style","display","el","ind","provided","snapshot","ref","innerRef","droppableProps","item","draggableId","draggableProps","dragHandleProps","justifyContent","placeholder","_c","$RefreshReg$"],"sources":["/Users/samanehmousavi/Desktop/concordia-bootcamp/Final Project/client/src/components/ProjectManagerTool/Bdnd.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\n\n// fake data generator\nconst getItems = (count, offset = 0) =>\n  Array.from({ length: count }, (v, k) => k).map((k) => ({\n    id: `item-${k + offset}-${new Date().getTime()}`,\n    content: `item ${k + offset}`,\n  }));\n\nconst reorder = (list, startIndex, endIndex) => {\n  const result = Array.from(list);\n  const [removed] = result.splice(startIndex, 1);\n  result.splice(endIndex, 0, removed);\n\n  return result;\n};\n\n/**\n * Moves an item from one list to another list.\n */\nconst move = (source, destination, droppableSource, droppableDestination) => {\n  const sourceClone = Array.from(source);\n  const destClone = Array.from(destination);\n  const [removed] = sourceClone.splice(droppableSource.index, 1);\n\n  destClone.splice(droppableDestination.index, 0, removed);\n\n  const result = {};\n  result[droppableSource.droppableId] = sourceClone;\n  result[droppableDestination.droppableId] = destClone;\n\n  return result;\n};\nconst grid = 8;\n\nconst getItemStyle = (isDragging, draggableStyle) => ({\n  // some basic styles to make the items look a bit nicer\n  userSelect: \"none\",\n  padding: grid * 2,\n  margin: `0 0 ${grid}px 0`,\n\n  // change background colour if dragging\n  background: isDragging ? \"lightgreen\" : \"grey\",\n\n  // styles we need to apply on draggables\n  ...draggableStyle,\n});\nconst getListStyle = (isDraggingOver) => ({\n  background: isDraggingOver ? \"lightblue\" : \"lightgrey\",\n  padding: grid,\n  width: 250,\n});\n\nfunction Bdnd() {\n  const [state, setState] = useState([getItems(10), getItems(5, 10)]);\n\n  function onDragEnd(result) {\n    const { source, destination } = result;\n\n    // dropped outside the list\n    if (!destination) {\n      return;\n    }\n    const sInd = +source.droppableId;\n    const dInd = +destination.droppableId;\n\n    if (sInd === dInd) {\n      const items = reorder(state[sInd], source.index, destination.index);\n      const newState = [...state];\n      newState[sInd] = items;\n      setState(newState);\n    } else {\n      const result = move(state[sInd], state[dInd], source, destination);\n      const newState = [...state];\n      newState[sInd] = result[sInd];\n      newState[dInd] = result[dInd];\n\n      setState(newState.filter((group) => group.length));\n    }\n  }\n\n  return (\n    <div>\n      <button\n        type=\"button\"\n        onClick={() => {\n          setState([...state, []]);\n        }}\n      >\n        Add new group\n      </button>\n      <button\n        type=\"button\"\n        onClick={() => {\n          setState([...state, getItems(1)]);\n        }}\n      >\n        Add new item\n      </button>\n      <div style={{ display: \"flex\" }}>\n        <DragDropContext onDragEnd={onDragEnd}>\n          {state.map((el, ind) => (\n            <Droppable key={ind} droppableId={`${ind}`}>\n              {(provided, snapshot) => (\n                <div\n                  ref={provided.innerRef}\n                  style={getListStyle(snapshot.isDraggingOver)}\n                  {...provided.droppableProps}\n                >\n                  {el.map((item, index) => (\n                    <Draggable\n                      key={item.id}\n                      draggableId={item.id}\n                      index={index}\n                    >\n                      {(provided, snapshot) => (\n                        <div\n                          ref={provided.innerRef}\n                          {...provided.draggableProps}\n                          {...provided.dragHandleProps}\n                          style={getItemStyle(\n                            snapshot.isDragging,\n                            provided.draggableProps.style\n                          )}\n                        >\n                          <div\n                            style={{\n                              display: \"flex\",\n                              justifyContent: \"space-around\",\n                            }}\n                          >\n                            {item.content}\n                            <button\n                              type=\"button\"\n                              onClick={() => {\n                                const newState = [...state];\n                                newState[ind].splice(index, 1);\n                                setState(\n                                  newState.filter((group) => group.length)\n                                );\n                              }}\n                            >\n                              delete\n                            </button>\n                          </div>\n                        </div>\n                      )}\n                    </Draggable>\n                  ))}\n                  {provided.placeholder}\n                </div>\n              )}\n            </Droppable>\n          ))}\n        </DragDropContext>\n      </div>\n    </div>\n  );\n}\n\nexport default Bdnd;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}