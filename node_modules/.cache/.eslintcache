[{"/Users/samanehmousavi/Desktop/concordia-bootcamp/Final Project/client/src/index.js":"1","/Users/samanehmousavi/Desktop/concordia-bootcamp/Final Project/client/src/App.js":"2","/Users/samanehmousavi/Desktop/concordia-bootcamp/Final Project/client/src/components/Checklist/CheckList.js":"3","/Users/samanehmousavi/Desktop/concordia-bootcamp/Final Project/client/src/components/HomePage/HomePage.js":"4","/Users/samanehmousavi/Desktop/concordia-bootcamp/Final Project/client/src/components/Checklist/Header.js":"5","/Users/samanehmousavi/Desktop/concordia-bootcamp/Final Project/client/src/components/Checklist/LogoutButton.js":"6","/Users/samanehmousavi/Desktop/concordia-bootcamp/Final Project/client/src/components/HomePage/StartNow.js":"7","/Users/samanehmousavi/Desktop/concordia-bootcamp/Final Project/client/src/components/HomePage/Header.js":"8","/Users/samanehmousavi/Desktop/concordia-bootcamp/Final Project/client/src/components/HomePage/LoginButton.js":"9","/Users/samanehmousavi/Desktop/concordia-bootcamp/Final Project/client/src/components/HomePage/LogoutButton.js":"10","/Users/samanehmousavi/Desktop/concordia-bootcamp/Final Project/client/src/components/ProjectManagerTool/Projects.js":"11","/Users/samanehmousavi/Desktop/concordia-bootcamp/Final Project/client/src/UserContext.js":"12","/Users/samanehmousavi/Desktop/concordia-bootcamp/Final Project/client/src/components/ProjectManagerTool/CreateBoard.js":"13","/Users/samanehmousavi/Desktop/concordia-bootcamp/Final Project/client/src/components/ProjectManagerTool/ProjectDetails.js":"14","/Users/samanehmousavi/Desktop/concordia-bootcamp/Final Project/client/src/GlobalStyles.js":"15"},{"size":747,"mtime":1693935702501,"results":"16","hashOfConfig":"17"},{"size":1136,"mtime":1693935726406,"results":"18","hashOfConfig":"17"},{"size":11651,"mtime":1694137828267,"results":"19","hashOfConfig":"17"},{"size":4618,"mtime":1692296954392,"results":"20","hashOfConfig":"17"},{"size":3927,"mtime":1692391650806,"results":"21","hashOfConfig":"17"},{"size":1542,"mtime":1692296390102,"results":"22","hashOfConfig":"17"},{"size":797,"mtime":1692295605514,"results":"23","hashOfConfig":"17"},{"size":3971,"mtime":1692391078740,"results":"24","hashOfConfig":"17"},{"size":814,"mtime":1692295140202,"results":"25","hashOfConfig":"17"},{"size":886,"mtime":1692295129844,"results":"26","hashOfConfig":"17"},{"size":6550,"mtime":1689727591108,"results":"27","hashOfConfig":"17"},{"size":465,"mtime":1689819901021,"results":"28","hashOfConfig":"17"},{"size":12440,"mtime":1693942131498,"results":"29","hashOfConfig":"17"},{"size":13304,"mtime":1693942135797,"results":"30","hashOfConfig":"17"},{"size":1672,"mtime":1689172655564,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},"4etm98",{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"35"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"35"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"35"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},"/Users/samanehmousavi/Desktop/concordia-bootcamp/Final Project/client/src/index.js",[],[],[],"/Users/samanehmousavi/Desktop/concordia-bootcamp/Final Project/client/src/App.js",[],[],"/Users/samanehmousavi/Desktop/concordia-bootcamp/Final Project/client/src/components/Checklist/CheckList.js",["81","82","83","84"],[],"/Users/samanehmousavi/Desktop/concordia-bootcamp/Final Project/client/src/components/HomePage/HomePage.js",["85"],[],"import { styled, keyframes } from \"styled-components\";\nimport Header from \"./Header\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport { useContext, useEffect } from \"react\";\nimport StartNow from \"./StartNow\";\nimport { UserContext } from \"../../UserContext\";\n\nconst HomePage = () => {\n  const { user } = useAuth0();\n  const { setCurrentUser } = useContext(UserContext);\n  useEffect(() => {\n    document.title = \"Bit\";\n\n    return () => {\n      document.title = \"Bit\";\n    };\n  }, []);\n\n  useEffect(() => {\n    if (user) {\n      fetch(\"/addUser\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(user),\n      })\n        .then((response) => response.json())\n        .then((parsed) => {\n          console.log(parsed);\n          window.localStorage.setItem(\"user\", JSON.stringify(user));\n          setCurrentUser(user);\n        })\n        .catch((error) => console.log(error));\n    }\n  }, [user]);\n\n  return (\n    <Main>\n      <Body>\n        <Header />\n        <HeroSection>\n          <ImageOne src={\"images/sticky-imageone.png\"} alt=\"Sticky notes\" />\n          <TextBox>\n            <div>\n              &nbsp;\"Being organized is being in control, and being in control\n              gives you confidence.\"\n            </div>\n            &nbsp;\n            <div>\n              &nbsp; Our tools provide simple yet effective solutions such as a\n              checklist with dates and workflow boards, enabling you to\n              visualize work items and track their statuses. By utilizing these\n              tools, you can easily identify areas that require your attention\n              and ensure smoother project management.\n            </div>\n            <StartNow />\n          </TextBox>\n\n          <ImageTwo src={\"images/kanban-homepage.png\"} alt=\"Kanban board\" />\n        </HeroSection>\n        <GradientBox></GradientBox>\n      </Body>\n    </Main>\n  );\n};\n\nexport default HomePage;\n\nconst Main = styled.div`\n  width: 100vw;\n  height: 100vh;\n  position: relative;\n`;\nconst Body = styled.div`\n  width: 100%;\n  height: 100%;\n`;\n\nconst gradientAnimation = keyframes`\n0% {\n  background-position: 0% 50%;\n}\n50% {\n  background-position: 100% 50%;\n}\n100% {\n  background-position: 0% 50%;\n}\n`;\nconst GradientBox = styled.div`\n  background-image: linear-gradient(40deg, #00c4cc, #ff66c4, #ffa53b);\n  background-size: 200% 200%;\n  animation: ${gradientAnimation} 5s linear infinite;\n  transform: skew(1 rad);\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  z-index: -1;\n  top: 0;\n  @media only screen and (max-width: 1024px) {\n    height: 130%;\n  }\n  @media only screen and (max-width: 700px) {\n    height: 120%;\n  }\n  @media only screen and (max-width: 350px) {\n    height: 110%;\n  }\n`;\n\nconst HeroSection = styled.div`\n  display: flex;\n  align-items: center;\n  height: 70vh;\n\n  @media only screen and (max-width: 1024px) {\n    justify-content: center;\n  }\n  @media only screen and (max-width: 768px) {\n    flex-direction: column;\n    margin-top: 5%;\n  }\n`;\n\nconst imageOneFadeIn = keyframes`\n  from {\n    opacity: 0;\n    transform: translateX(50%);\n  }\n  to {\n    opacity: 1;\n    transform: translateX(0);\n  }\n`;\n\nconst imageTwoFadeIn = keyframes`\n  from {\n    opacity: 0;\n    transform: translateX(-50%);\n  }\n  to {\n    opacity: 1;\n    transform: translateX(0);\n  }\n  \n`;\n\nconst ImageOne = styled.img`\n  z-index: 1;\n  width: 35%;\n  align-self: flex-start;\n  animation: ${imageOneFadeIn} 1s ease-in-out;\n\n  @media only screen and (max-width: 1024px) {\n    width: 30%;\n  }\n  @media only screen and (max-width: 768px) {\n    align-self: center;\n    width: 40%;\n  }\n  @media only screen and (max-width: 425px) {\n    align-self: center;\n    width: 70%;\n  }\n`;\n\nconst ImageTwo = styled.img`\n  z-index: 1;\n  width: 30%;\n  align-self: flex-end;\n  animation: ${imageTwoFadeIn} 1s ease-in-out;\n  @media only screen and (max-width: 1024px) {\n    width: 30%;\n  }\n  @media only screen and (max-width: 768px) {\n    align-self: center;\n    width: 40%;\n  }\n  @media only screen and (max-width: 425px) {\n    align-self: center;\n    width: 70%;\n  }\n`;\nconst TextBox = styled.div`\n  align-self: flex-end;\n  color: black;\n  font-size: 1.5rem;\n  opacity: 0.5;\n  width: 30%;\n  padding: 5%;\n\n  @media (max-width: 1500px) {\n    align-self: center;\n  }\n  @media only screen and (max-width: 1024px) {\n    font-size: 1.25rem;\n    align-self: center;\n  }\n  @media only screen and (max-width: 768px) {\n    align-self: center;\n    width: 80%;\n  }\n\n  @media only screen and (max-width: 425px) {\n    font-size: 1rem;\n  }\n`;\n","/Users/samanehmousavi/Desktop/concordia-bootcamp/Final Project/client/src/components/Checklist/Header.js",[],[],"/Users/samanehmousavi/Desktop/concordia-bootcamp/Final Project/client/src/components/Checklist/LogoutButton.js",[],[],"/Users/samanehmousavi/Desktop/concordia-bootcamp/Final Project/client/src/components/HomePage/StartNow.js",[],[],"/Users/samanehmousavi/Desktop/concordia-bootcamp/Final Project/client/src/components/HomePage/Header.js",[],[],"/Users/samanehmousavi/Desktop/concordia-bootcamp/Final Project/client/src/components/HomePage/LoginButton.js",[],[],"/Users/samanehmousavi/Desktop/concordia-bootcamp/Final Project/client/src/components/HomePage/LogoutButton.js",[],[],"/Users/samanehmousavi/Desktop/concordia-bootcamp/Final Project/client/src/components/ProjectManagerTool/Projects.js",["86","87","88"],[],"import { styled, keyframes } from \"styled-components\";\nimport Header from \"../Checklist/Header\";\nimport { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { UserContext } from \"../../UserContext\";\nimport { useContext } from \"react\";\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Paper,\n} from \"@material-ui/core\";\n\nconst Projects = ({ boardId, projectId }) => {\n  const { currentUser, setCurrentUser } = useContext(UserContext);\n  const navigate = useNavigate();\n  const [projects, setProjects] = useState({});\n  const Refresh = () => {\n    fetch(`/getprojects/${currentUser.email}`)\n      .then((response) => response.json())\n      .then((parsed) => {\n        if (parsed.status === 404) {\n          throw new Error(parsed.message);\n        }\n\n        setProjects(parsed.data);\n      })\n      .catch((error) => {\n        setProjects([]);\n        console.log(\"Error fetching data:\", error);\n      });\n  };\n\n  useEffect(() => {\n    if (currentUser) {\n      Refresh();\n    }\n  }, [currentUser]);\n\n  const handleDelete = (index) => {\n    fetch(`/deleteProject/${currentUser.email}/${index}`, {\n      method: \"DELETE\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((response) => response.json())\n      .then((parsed) => {\n        console.log(parsed);\n        Refresh();\n      })\n\n      .catch((error) => console.log(error));\n  };\n\n  return (\n    <Main>\n      <Header />\n      <Body>\n        <ProjectsOverview>\n          <Text>Projects Overview</Text>\n          <TableContainer component={Paper}>\n            <Table>\n              <TableHead>\n                <HeaderRow>\n                  <TableHeader align=\"center\">Project Title</TableHeader>\n                  <TableHeader align=\"center\">Due Date</TableHeader>\n                  <TableHeader align=\"center\">Project Description</TableHeader>\n                  <TableHeader align=\"center\">\n                    Day's Left to Complete\n                  </TableHeader>\n                  <TableHeader align=\"center\">Status</TableHeader>\n                  <TableHeader align=\"center\"></TableHeader>\n                </HeaderRow>\n              </TableHead>\n              <TableBody>\n                {Object.values(projects).map((project, index) => {\n                  if (!project) {\n                    return null;\n                  }\n\n                  const Difference_In_Time =\n                    new Date(project.dueDate).getTime() - new Date().getTime();\n                  const Difference_In_Days = Math.floor(\n                    Difference_In_Time / (1000 * 3600 * 24)\n                  );\n\n                  return (\n                    <TableRow key={index}>\n                      <ProjectRow align=\"center\">\n                        <a\n                          onClick={() => {\n                            navigate(`/projectdetails/${project._id}`);\n                          }}\n                          style={{ textDecoration: \"underline\" }}\n                        >\n                          {project.title}\n                        </a>\n                      </ProjectRow>\n                      <ProjectRow align=\"center\">{project.dueDate}</ProjectRow>\n                      <ProjectRow align=\"center\">\n                        {project.description}\n                      </ProjectRow>\n                      <ProjectRow align=\"center\">\n                        {Difference_In_Days}\n                      </ProjectRow>\n                      <ProjectRow align=\"center\">{project.status}</ProjectRow>\n                      <ProjectRow align=\"center\">\n                        <Delete\n                          onClick={() => {\n                            handleDelete(project._id);\n                          }}\n                        >\n                          Delete\n                        </Delete>\n                      </ProjectRow>\n                    </TableRow>\n                  );\n                })}\n              </TableBody>\n            </Table>\n          </TableContainer>\n          <CreateProject\n            onClick={() => {\n              navigate(`/createboard`);\n            }}\n          >\n            Add New Project\n          </CreateProject>\n        </ProjectsOverview>\n\n        <GradientBox></GradientBox>\n      </Body>\n    </Main>\n  );\n};\n\nexport default Projects;\nconst Main = styled.div`\n  height: 100vh;\n  width: 100vw;\n  margin: 0 auto;\n  position: relative;\n`;\n\nconst Body = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  height: 100%;\n`;\nconst gradientAnimation = keyframes`\n0% {\n  background-position: 0% 50%;\n}\n50% {\n  background-position: 100% 50%;\n}\n100% {\n  background-position: 0% 50%;\n}\n`;\nconst GradientBox = styled.div`\n  position: absolute;\n  width: 100%;\n  height: 85%;\n  bottom: 0;\n  background-image: linear-gradient(-30deg, orange, #ffde59, #c1ff72);\n  background-size: 200% 200%;\n  animation: ${gradientAnimation} 10s linear infinite;\n  transform: skewY(-10deg);\n  z-index: -2;\n`;\n\nconst CreateProject = styled.button`\n  font-size: 1.5rem;\n  border-radius: 0.5rem;\n  background-color: #00c4cc;\n  border: none;\n  padding: 2%;\n\n  &:hover {\n    background-color: yellow;\n    color: black;\n  }\n\n  &:active {\n    background-color: yellow;\n    scale: 0.9;\n  }\n  margin: 2%;\n`;\nconst overviewFadeIn = keyframes`\n  from {\n    opacity: 0;\n    transform: translateX(50%);\n  }\n  to {\n    opacity: 1;\n    transform: translateX(0);\n\n    \n  }\n`;\n\nconst ProjectsOverview = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin: 2%;\n  color: black;\n  font-size: 2rem;\n  animation: ${overviewFadeIn} 1s ease-in-out;\n`;\nconst Text = styled.div`\n  margin: 5%;\n`;\nconst TableHeader = styled(TableCell)`\n  && {\n    font-size: 1.5rem;\n    color: black;\n    border: 0.25rem solid #a6a6a6;\n    background-color: #00c4cc;\n    width: 15%;\n  }\n`;\nconst HeaderRow = styled(TableRow)`\n  && {\n    width: 100%;\n  }\n`;\nconst ProjectRow = styled(TableCell)`\n  && {\n    font-size: 1.5rem;\n    color: black;\n    background-color: #ffeda6;\n    // background-color: none;\n    // z-index: -2;\n    border: 0.25rem solid #a6a6a6;\n  }\n`;\nconst Delete = styled.button`\n  font-size: 1.5rem;\n  color: black;\n  border-radius: 0.5rem;\n  background-color: #00c4cc;\n  border: none;\n  padding: 10%;\n\n  &:hover {\n    background-color: yellow;\n    color: black;\n  }\n\n  &:active {\n    background-color: yellow;\n    scale: 0.9;\n  }\n`;\n","/Users/samanehmousavi/Desktop/concordia-bootcamp/Final Project/client/src/UserContext.js",[],[],"/Users/samanehmousavi/Desktop/concordia-bootcamp/Final Project/client/src/components/ProjectManagerTool/CreateBoard.js",["89","90","91","92"],[],"import { styled, keyframes } from \"styled-components\";\nimport Header from \"../Checklist/Header\";\nimport { useState, useEffect } from \"react\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport { plus } from \"react-icons-kit/fa/plus\";\nimport { Icon } from \"react-icons-kit\";\n\nconst taskStatus = {\n  requested: {\n    name: \"Requested\",\n    items: [],\n  },\n  toDo: {\n    name: \"To do\",\n    items: [],\n  },\n  inProgress: {\n    name: \"In Progress\",\n    items: [],\n  },\n  done: {\n    name: \"Done\",\n    items: [],\n  },\n};\n\nconst onDragEnd = (result, columns, setColumns) => {\n  if (!result.destination) return;\n  const { source, destination } = result;\n\n  if (source.droppableId !== destination.droppableId) {\n    const sourceColumn = columns[source.droppableId];\n    const destColumn = columns[destination.droppableId];\n    const sourceItems = [...sourceColumn.items];\n    const destItems = [...destColumn.items];\n    const [removed] = sourceItems.splice(source.index, 1);\n    destItems.splice(destination.index, 0, removed);\n    setColumns({\n      ...columns,\n      [source.droppableId]: {\n        ...sourceColumn,\n        items: sourceItems,\n      },\n      [destination.droppableId]: {\n        ...destColumn,\n        items: destItems,\n      },\n    });\n  } else {\n    const column = columns[source.droppableId];\n    const copiedItems = [...column.items];\n    const [removed] = copiedItems.splice(source.index, 1);\n    copiedItems.splice(destination.index, 0, removed);\n    setColumns({\n      ...columns,\n      [source.droppableId]: {\n        ...column,\n        items: copiedItems,\n      },\n    });\n  }\n};\n\nconst CreateBoard = () => {\n  const { user } = useAuth0();\n  const [columns, setColumns] = useState(taskStatus);\n  const [startDate, setStartDate] = useState(new Date());\n  const [formData, setFormData] = useState({});\n  const [addTask, setAddTask] = useState({});\n  const navigate = useNavigate();\n  const [userList, setUserList] = useState([]);\n\n  useEffect(() => {\n    fetch(\"/getUser\")\n      .then((response) => response.json())\n      .then((parsed) => {\n        console.log(parsed.data);\n        setUserList(parsed.data);\n      });\n  }, []);\n\n  const addTaskhandleChange = (event) => {\n    setAddTask({\n      ...addTask,\n      [event.target.id]: event.target.value,\n    });\n  };\n\n  const handleChange = (e) => {\n    setFormData({\n      ...formData,\n      [e.target.id]: e.target.value,\n    });\n  };\n\n  const handleAddTask = (id, start) => {\n    const name = columns[id].name;\n    const newArray = [...columns[id].items];\n    newArray.push({ id: newArray.length + 1, content: addTask[id] });\n    setColumns({ ...columns, [id]: { name: name, items: newArray } });\n    setAddTask({});\n  };\n  const handleDelete = (columnId, index) => {\n    const name = columns[columnId].name;\n    const newArray = [...columns[columnId].items];\n\n    newArray.splice(index, 1);\n    setColumns({ ...columns, [columnId]: { name: name, items: newArray } });\n    setAddTask({});\n  };\n\n  const handleSubmit = (e) => {\n    console.log(formData);\n    fetch(\"/addProject\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        title: formData.projectTitle,\n        description: formData.projectDescription,\n        dueDate: formData.start,\n        taskData: columns,\n        user: user.email,\n        member: formData.member,\n      }),\n    })\n      .then((res) => res.json())\n      .then((parsed) => {\n        if (parsed.status === 200) {\n          console.log(parsed.data);\n          navigate(\"/projects\");\n        } else {\n          alert(parsed.error);\n        }\n      });\n  };\n  return (\n    <Main>\n      <div>\n        <Header />\n        <Body>\n          {formData && (\n            <SideBar>\n              <FormContainer>\n                <Form onSubmit={handleSubmit}>\n                  <label>Project Title</label>\n                  <FormInput\n                    id=\"projectTitle\"\n                    name=\"projectTitle\"\n                    type=\"text\"\n                    onChange={handleChange}\n                  />\n\n                  <label>Members Names</label>\n                  <select\n                    id=\"member\"\n                    name=\"membersName\"\n                    type=\"text\"\n                    onChange={handleChange}\n                    style={{\n                      padding: \"1.5%\",\n                      fontSize: \"1rem\",\n                      borderRadius: \"0.5rem\",\n                      border: \"none\",\n                      boxShadow:\n                        \"0 0.1rem 0.2rem 0 #808080, 0 0.1rem 0.2rem #808080\",\n                    }}\n                  >\n                    {userList?.map((member) => {\n                      return <option value={member}>{member}</option>;\n                    })}\n                  </select>\n\n                  <label>Project Description</label>\n                  <FormInput\n                    id=\"projectDescription\"\n                    name=\"projectDescription\"\n                    type=\"text\"\n                    onChange={handleChange}\n                  />\n\n                  <label for=\"start\">Project Due Date</label>\n                  <FormInput\n                    type=\"date\"\n                    id=\"start\"\n                    name=\"start\"\n                    value={formData.start}\n                    onChange={handleChange}\n                  />\n                </Form>\n              </FormContainer>\n              <SaveLink type=\"submit\" onClick={handleSubmit}>\n                Save\n              </SaveLink>\n            </SideBar>\n          )}\n          <div>\n            <div\n              style={{\n                display: \"flex\",\n                justifyContent: \"center\",\n                height: \"100%\",\n                width: \"60rem\",\n              }}\n            >\n              <DragDropContext\n                onDragEnd={(result) => onDragEnd(result, columns, setColumns)}\n              >\n                {Object.entries(columns).map(([columnId, column], index) => (\n                  <div\n                    key={columnId}\n                    style={{\n                      display: \"flex\",\n                      flexDirection: \"column\",\n                      alignItems: \"center\",\n                      width: \"200px\",\n                    }}\n                  >\n                    <BoardHeader>{column.name}</BoardHeader>\n\n                    <Droppable droppableId={columnId}>\n                      {(provided) => (\n                        <ItemList\n                          ref={provided.innerRef}\n                          {...provided.droppableProps}\n                        >\n                          {column.items.map((item, index) => (\n                            <Draggable\n                              key={item.id}\n                              draggableId={item.id.toString()}\n                              index={index}\n                            >\n                              {(provided) => (\n                                <Item\n                                  ref={provided.innerRef}\n                                  {...provided.draggableProps}\n                                  {...provided.dragHandleProps}\n                                >\n                                  {item.content}\n                                  <Delete\n                                    onClick={() =>\n                                      handleDelete(columnId, index)\n                                    }\n                                  >\n                                    delete\n                                  </Delete>\n                                </Item>\n                              )}\n                            </Draggable>\n                          ))}\n                          <NewTaskContainer>\n                            <NewTaskInput\n                              type=\"text\"\n                              id={columnId}\n                              value={addTask[columnId]}\n                              onChange={addTaskhandleChange}\n                            />\n\n                            <NewTask\n                              onClick={() =>\n                                handleAddTask(columnId, formData.start)\n                              }\n                            >\n                              {\" \"}\n                              New Task{\" \"}\n                            </NewTask>\n                          </NewTaskContainer>\n\n                          {provided.placeholder}\n                        </ItemList>\n                      )}\n                    </Droppable>\n                  </div>\n                ))}\n              </DragDropContext>\n            </div>\n          </div>\n        </Body>\n      </div>\n      <GradientBox></GradientBox>\n    </Main>\n  );\n};\nexport default CreateBoard;\n\nconst Main = styled.div`\n  height: 100vh;\n  width: 100vw;\n  margin: 0 auto;\n`;\n\nconst Body = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  gap: 10%;\n  align-items: center;\n  margin: 5%;\n`;\nconst gradientAnimation = keyframes`\n0% {\n  background-position: 0% 50%;\n}\n50% {\n  background-position: 100% 50%;\n}\n100% {\n  background-position: 0% 50%;\n}\n`;\nconst GradientBox = styled.div`\n  background-image: linear-gradient(40deg, #00c4cc, #ff66c4, #ffa53b);\n  background-size: 200% 200%;\n  animation: ${gradientAnimation} 5s linear infinite;\n  transform: skewY(-10deg);\n  position: absolute;\n  width: 100%;\n  height: 70%;\n  z-index: -1;\n  bottom: 0;\n`;\nconst FormFadeIn = keyframes`\n  from {\n    opacity: 0;\n    transform: translateY(50%);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }`;\nconst SideBar = styled.div`\n  width: 25%;\n  border-radius: 0.5rem;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  animation: ${FormFadeIn} 1s ease-in-out;\n`;\n\nconst FormContainer = styled.div`\n  display: flex;\n  background-color: #86c5d8;\n  border: none;\n  flex-direction: column;\n  align-items: center;\n  padding: 7%;\n  border-radius: 0.5rem;\n`;\nconst Form = styled.form`\n  display: grid;\n  grid-template-columns: 1fr 2fr;\n  align-items: center;\n  font-size: 1rem;\n  gap: 2rem;\n  color: black;\n  width: 100%;\n  padding: 2%;\n`;\nconst FormInput = styled.input`\n  padding: 2%;\n  font-size: 1rem;\n  border-radius: 0.5rem;\n  border: none;\n  box-shadow: 0 0.1rem 0.2rem 0 #808080, 0 0.1rem 0.2rem #808080;\n  width: 100%;\n`;\n\nconst SaveLink = styled.button`\n  font-size: 1rem;\n  padding: 2% 10%;\n  margin: 5%;\n  background-color: #20cd8d;\n  border: none;\n  border-radius: 0.5rem;\n  &:hover {\n    background-color: yellow;\n    color: black;\n  }\n\n  &:active {\n    scale: 0.9;\n  }\n`;\nconst BoardFadeIn = keyframes`\n  from {\n    opacity: 0;\n    transform: translateY(50%);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n  \n`;\n\nconst BoardHeader = styled.div`\n  font-size: 1.25rem;\n  padding: 2%;\n  font-weight: bold;\n  text-align: center;\n`;\nconst ItemList = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  height: 100%;\n  min-height: 35rem;\n  background-color: #86c5d8;\n  border-radius: 0.5rem;\n  box-shadow: 0 0.1rem 0.2rem 0 #808080, 0 0.1rem 0.2rem #808080;\n  animation: ${BoardFadeIn} 1s ease-in-out;\n`;\n\nconst Item = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  font-size: 1rem;\n  padding: 5%;\n  background-color: #ffe6f5;\n  color: black;\n  border: none;\n  margin: 2%;\n  border-radius: 0.5rem;\n`;\n\nconst Delete = styled.button`\n  font-size: 1rem;\n  padding: 2%;\n  height: 100%;\n  background-color: #20cd8d;\n  color: black;\n  border: none;\n  border-radius: 0.5rem;\n  &:hover {\n    background-color: yellow;\n    color: black;\n  }\n  &:active {\n    scale: 0.9;\n  }\n`;\nconst NewTaskContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 15%;\n  margin: 2%;\n  border-radius: 0.5rem;\n`;\nconst NewTask = styled.button`\n  font-size: 1rem;\n  padding: 2%;\n  height: 100%;\n  background-color: #20cd8d;\n  color: black;\n  border: none;\n  &:hover {\n    background-color: yellow;\n    color: black;\n  }\n  border-radius: 0.5rem;\n`;\nconst NewTaskInput = styled.input`\n  font-size: 1rem;\n  padding: 1.5%;\n  height: 100%;\n  border-radius: 0.5rem;\n  box-shadow: 0 0.1rem 0.2rem 0 #808080, 0 0.1rem 0.2rem #808080;\n  border: none;\n`;\n","/Users/samanehmousavi/Desktop/concordia-bootcamp/Final Project/client/src/components/ProjectManagerTool/ProjectDetails.js",[],[],"/Users/samanehmousavi/Desktop/concordia-bootcamp/Final Project/client/src/GlobalStyles.js",[],[],{"ruleId":"93","severity":1,"message":"94","line":14,"column":24,"nodeType":"95","messageId":"96","endLine":14,"endColumn":38},{"ruleId":"93","severity":1,"message":"97","line":18,"column":10,"nodeType":"95","messageId":"96","endLine":18,"endColumn":17},{"ruleId":"93","severity":1,"message":"98","line":18,"column":19,"nodeType":"95","messageId":"96","endLine":18,"endColumn":29},{"ruleId":"99","severity":1,"message":"100","line":48,"column":6,"nodeType":"101","endLine":48,"endColumn":26,"suggestions":"102"},{"ruleId":"99","severity":1,"message":"103","line":37,"column":6,"nodeType":"101","endLine":37,"endColumn":12,"suggestions":"104"},{"ruleId":"93","severity":1,"message":"94","line":18,"column":24,"nodeType":"95","messageId":"96","endLine":18,"endColumn":38},{"ruleId":"99","severity":1,"message":"100","line":41,"column":6,"nodeType":"101","endLine":41,"endColumn":19,"suggestions":"105"},{"ruleId":"106","severity":1,"message":"107","line":95,"column":25,"nodeType":"108","endLine":100,"endColumn":26},{"ruleId":"93","severity":1,"message":"109","line":7,"column":10,"nodeType":"95","messageId":"96","endLine":7,"endColumn":14},{"ruleId":"93","severity":1,"message":"110","line":8,"column":10,"nodeType":"95","messageId":"96","endLine":8,"endColumn":14},{"ruleId":"93","severity":1,"message":"111","line":69,"column":10,"nodeType":"95","messageId":"96","endLine":69,"endColumn":19},{"ruleId":"93","severity":1,"message":"112","line":69,"column":21,"nodeType":"95","messageId":"96","endLine":69,"endColumn":33},"no-unused-vars","'setCurrentUser' is assigned a value but never used.","Identifier","unusedVar","'checked' is assigned a value but never used.","'setChecked' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'Refresh'. Either include it or remove the dependency array.","ArrayExpression",["113"],"React Hook useEffect has a missing dependency: 'setCurrentUser'. Either include it or remove the dependency array.",["114"],["115"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'plus' is defined but never used.","'Icon' is defined but never used.","'startDate' is assigned a value but never used.","'setStartDate' is assigned a value but never used.",{"desc":"116","fix":"117"},{"desc":"118","fix":"119"},{"desc":"120","fix":"121"},"Update the dependencies array to be: [value, currentUser, Refresh]",{"range":"122","text":"123"},"Update the dependencies array to be: [setCurrentUser, user]",{"range":"124","text":"125"},"Update the dependencies array to be: [Refresh, currentUser]",{"range":"126","text":"127"},[1458,1478],"[value, currentUser, Refresh]",[1010,1016],"[setCurrentUser, user]",[1062,1075],"[Refresh, currentUser]"]